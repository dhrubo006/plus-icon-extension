{"version":3,"file":"background.bundle.js","mappings":"MA+BA,SAASA,EAAmBC,GAC1BC,MAAM,kCAAmC,CACvCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAEtBO,MAAKC,GAAYA,EAASC,SAC1BF,MAAKP,IACJU,QAAQC,IAAI,WAAYX,EAAK,IAE9BY,OAAOC,IACNH,QAAQG,MAAM,SAAUA,EAAM,GAElC,CA9CAC,OAAOC,QAAQC,UAAUC,aAAY,CAACC,EAASC,EAAQC,IAC9B,aAAnBF,EAAQG,QACVP,OAAOQ,QAAQC,MAAMC,IAAI,CAAEC,KAAM,KAAOC,IACtC,MAAMD,EAAOC,EAAOD,KACdE,EAAa,CAAEC,IAAKV,EAAQU,IAAKC,QAASX,EAAQW,SACxDJ,EAAKK,KAAKH,GACVb,OAAOQ,QAAQC,MAAMQ,IAAI,CAAEN,SAAQ,KACjC1B,EAAmB4B,GACnBP,EAAa,CAAEY,OAAQ,UAAWJ,IAAKV,EAAQU,KAAM,GACrD,KAEG,GAGc,yBAAnBV,EAAQG,QACVP,OAAOQ,QAAQC,MAAMC,IAAI,CAAES,YAAa,CAAC,IAAMP,IAC7C,MAAMO,EAAcP,EAAOO,aAAe,CAAC,EACtCA,EAAYf,EAAQgB,cACvBD,EAAYf,EAAQgB,YAAc,IAEpC,MAAMC,EAAoB,CAAEP,IAAKV,EAAQU,IAAKC,QAASX,EAAQW,SAC/DI,EAAYf,EAAQgB,YAAYJ,KAAKK,GACrCrB,OAAOQ,QAAQC,MAAMQ,IAAI,CAAEE,gBAAe,KACxClC,EAAmB,CAAEmC,WAAYhB,EAAQgB,cAAeC,IACxDf,EAAa,CAAEY,OAAQ,UAAWE,WAAYhB,EAAQgB,WAAYN,IAAKV,EAAQU,KAAM,GACrF,KAEG,QAbT,G","sources":["webpack://plus-icon-extension/./public/background.js"],"sourcesContent":["chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (message.action === 'storeUrl') {\n    chrome.storage.local.get({ urls: [] }, (result) => {\n      const urls = result.urls;\n      const newUrlData = { url: message.url, favicon: message.favicon };\n      urls.push(newUrlData);\n      chrome.storage.local.set({ urls }, () => {\n        sendToFlaskBackend(newUrlData);\n        sendResponse({ status: 'success', url: message.url });\n      });\n    });\n    return true; // Indicates that the response will be sent asynchronously\n  }\n\n  if (message.action === 'storeUrlInCollection') {\n    chrome.storage.local.get({ collections: {} }, (result) => {\n      const collections = result.collections || {};\n      if (!collections[message.collection]) {\n        collections[message.collection] = [];\n      }\n      const newCollectionData = { url: message.url, favicon: message.favicon };\n      collections[message.collection].push(newCollectionData);\n      chrome.storage.local.set({ collections }, () => {\n        sendToFlaskBackend({ collection: message.collection, ...newCollectionData });\n        sendResponse({ status: 'success', collection: message.collection, url: message.url });\n      });\n    });\n    return true; // Indicates that the response will be sent asynchronously\n  }\n});\n\nfunction sendToFlaskBackend(data) {\n  fetch('http://localhost:5000/store_url', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('Success:', data);\n  })\n  .catch((error) => {\n    console.error('Error:', error);\n  });\n}\n"],"names":["sendToFlaskBackend","data","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","chrome","runtime","onMessage","addListener","message","sender","sendResponse","action","storage","local","get","urls","result","newUrlData","url","favicon","push","set","status","collections","collection","newCollectionData"],"sourceRoot":""}